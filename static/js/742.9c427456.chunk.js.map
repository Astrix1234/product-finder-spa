{"version":3,"file":"static/js/742.9c427456.chunk.js","mappings":"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","sources":["Zustand/api.ts","webpack://product-finder-spa/./src/components/Table/Table.module.scss?f22e","components/Table/Table.tsx","pages/ProductByIdPage/ProductByIdPage.tsx"],"sourcesContent":["import axios from 'axios';\n\nconst apiUrl = process.env.REACT_APP_BASE_URL;\n\nif (!apiUrl) {\n  throw new Error(\n    'REACT_APP_BASE_URL is not defined in environment variables.'\n  );\n}\n\nexport const getProducts = async (page: number, perPage: number) => {\n  try {\n    const response = await axios.get(apiUrl, {\n      params: { page: page, per_page: perPage },\n    });\n    return response.data.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\nexport const getProductById = async (id: number) => {\n  try {\n    const response = await axios.get(apiUrl, { params: { id: id } });\n    const product = response.data.data;\n    return Array.isArray(product) ? product : [product];\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\nexport const getLastProductOnFirstPage = async () => {\n  try {\n    const response = await axios.get(apiUrl, { params: { page: 1 } });\n    const lastProductIndex = response.data.data.length - 1;\n    return response.data.data[lastProductIndex];\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\nexport const getLastTwoProductsOnLastPage = async () => {\n  try {\n    const response = await axios.get(apiUrl, { params: { page: 2 } });\n    const dataLength = response.data.data.length;\n    return response.data.data.slice(dataLength - 2);\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"table\":\"Table_table__YUzYe\",\"backdrop\":\"Table_backdrop__VKMME\",\"backdropHidden\":\"Table_backdropHidden__W3HXt\",\"modal\":\"Table_modal__znsan\",\"button\":\"Table_button__fEgjN\"};","import { useState, useEffect, useCallback } from 'react';\nimport scss from './Table.module.scss';\nimport { Product } from '../../Zustand/store';\n\ninterface TableProps {\n  pageProducts: Product[];\n}\n\nexport const Table = ({ pageProducts }: TableProps) => {\n  const [selectedProduct, setSelectedProduct] = useState<Product | null>(null);\n  const [isOpen, setIsOpen] = useState(false);\n\n  const backdropClasses = `${scss.backdrop} ${\n    !isOpen ? scss.backdropHidden : ''\n  }`;\n\n  const handleToggleModal = useCallback(() => {\n    setIsOpen(prevIsOpen => !prevIsOpen);\n  }, [setIsOpen]);\n\n  const handleRowClick = useCallback(\n    (product: Product) => {\n      setSelectedProduct(product);\n      setTimeout(() => {\n        handleToggleModal();\n      }, 100);\n    },\n    [setSelectedProduct, handleToggleModal]\n  );\n\n  const handleCloseModal = useCallback(() => {\n    handleToggleModal();\n    setTimeout(() => {\n      setSelectedProduct(null);\n    }, 300);\n  }, [setSelectedProduct, handleToggleModal]);\n\n  const handleBackdropClick = (event: React.MouseEvent<HTMLDivElement>) => {\n    if (event.currentTarget === event.target) {\n      handleCloseModal();\n    }\n  };\n\n  useEffect(() => {\n    const handleEscapeKey = (event: KeyboardEvent) => {\n      if (isOpen && event.key === 'Escape') {\n        handleCloseModal();\n      }\n    };\n\n    document.addEventListener('keydown', handleEscapeKey);\n\n    return () => {\n      document.removeEventListener('keydown', handleEscapeKey);\n    };\n  }, [handleCloseModal, isOpen]);\n\n  return (\n    <>\n      <table className={scss.table}>\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>NAME</th>\n            <th>YEAR</th>\n          </tr>\n        </thead>\n        <tbody>\n          {pageProducts.map(product => (\n            <tr\n              key={product.id}\n              style={{ backgroundColor: product.color }}\n              onClick={() => handleRowClick(product)}\n            >\n              <td>{product.id}</td>\n              <td>{product.name}</td>\n              <td>{product.year}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      {selectedProduct && (\n        <div className={backdropClasses} onClick={handleBackdropClick}>\n          <div\n            className={scss.modal}\n            style={{ backgroundColor: selectedProduct.color }}\n          >\n            <button\n              type=\"button\"\n              className={scss.button}\n              onClick={handleCloseModal}\n            >\n              x\n            </button>\n            <h2>Product Details</h2>\n            <p>ID: {selectedProduct.id}</p>\n            <p>Name: {selectedProduct.name}</p>\n            <p>Year: {selectedProduct.year}</p>\n            <p>Color: {selectedProduct.color}</p>\n            <p>Pantone value: {selectedProduct.pantone_value}</p>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n","import { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Helmet } from 'react-helmet-async';\nimport store from '../../Zustand/store';\nimport { getProductById } from '../../Zustand/api';\nimport { toast } from 'react-toastify';\nimport { Table } from '../../components/Table/Table';\n\nexport default function ProductByIdPage() {\n  const { id } = useParams();\n  const { productById, setProductById, setLoading } = store();\n\n  useEffect(() => {\n    const fetchProduct = async () => {\n      try {\n        setLoading(true);\n        if (id) {\n          const productId = parseInt(id, 10);\n          const data = await getProductById(productId);\n          setProductById(data);\n        }\n      } catch (error) {\n        console.error(error);\n        if (error instanceof Error && error.message) {\n          toast.error(error.message);\n        } else {\n          toast.error('An error occurred');\n        }\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchProduct();\n  }, [id, setProductById, setLoading]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Product Finder - Product</title>\n      </Helmet>\n      <Table pageProducts={productById} />\n    </>\n  );\n}\n"],"names":["apiUrl","process","REACT_APP_BASE_URL","Error","getProducts","async","page","perPage","axios","get","params","per_page","data","error","console","getProductById","product","id","Array","isArray","getLastProductOnFirstPage","response","lastProductIndex","length","getLastTwoProductsOnLastPage","dataLength","slice","Table","_ref","pageProducts","selectedProduct","setSelectedProduct","useState","isOpen","setIsOpen","backdropClasses","concat","scss","handleToggleModal","useCallback","prevIsOpen","handleRowClick","setTimeout","handleCloseModal","useEffect","handleEscapeKey","event","key","document","addEventListener","removeEventListener","_jsxs","_Fragment","children","className","_jsx","map","style","backgroundColor","color","onClick","name","year","currentTarget","target","type","pantone_value","ProductByIdPage","useParams","productById","setProductById","setLoading","store","productId","parseInt","message","toast","fetchProduct","Helmet"],"sourceRoot":""}